{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Perez\\\\Desktop\\\\Confe\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        email,\n        password\n      });\n      if (response.data.token) {\n        // Guardar el token y el rol en localStorage\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userRole', response.data.rol);\n\n        // Redirigir según el rol\n        if (response.data.rol === 'administrador') {\n          navigate('/admin');\n        } else {\n          navigate('/user');\n        }\n      } else {\n        setError('Error en la respuesta del servidor');\n      }\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        setError('Credenciales inválidas');\n      } else {\n        setError('Error al conectar con el servidor');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Ingresar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","post","data","token","localStorage","setItem","rol","err","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Jose Perez/Desktop/Confe/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/login', {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      if (response.data.token) {\r\n        // Guardar el token y el rol en localStorage\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('userRole', response.data.rol);\r\n        \r\n        // Redirigir según el rol\r\n        if (response.data.rol === 'administrador') {\r\n          navigate('/admin');\r\n        } else {\r\n          navigate('/user');\r\n        }\r\n      } else {\r\n        setError('Error en la respuesta del servidor');\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 401) {\r\n        setError('Credenciales inválidas');\r\n      } else {\r\n        setError('Error al conectar con el servidor');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h2>Iniciar Sesión</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Contraseña:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Ingresar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}